@using Proyecto_Apuestas.Helpers
@model List<Proyecto_Apuestas.Models.API.OddsApiModel>

@if (!Model.Any())
{
    <div class="alert alert-info bg-dark-2 border-info text-white search-no-results">
        <div class="d-flex align-items-center">
            <i class="bi bi-search me-3 text-info fs-4"></i>
            <div>
                <h5 class="alert-heading mb-1">No se encontraron eventos</h5>
                <p class="mb-0">No hay eventos que coincidan con tu búsqueda en este momento. Prueba con otros términos.</p>
            </div>
        </div>
    </div>
}
else
{
    <div class="search-results-header">
        <div class="d-flex align-items-center justify-content-between mb-3">
            <h5 class="mb-0 text-white">
                <i class="bi bi-calendar2-event me-2 text-primary"></i>Resultados de la búsqueda
                <span class="badge bg-gradient-primary ms-2 pulse-animation">@Model.Count</span>
            </h5>
            <div>
                <button class="btn btn-sm btn-outline-primary search-clear-btn" onclick="clearSearch()">
                    <i class="bi bi-x-circle me-1"></i>Limpiar
                </button>
            </div>
        </div>
    </div>

    <div class="search-results-container">
        <div class="search-events-grid">
            @foreach (var evt in Model)
            {
                var localTime = evt.CommenceTime.Kind == DateTimeKind.Utc ?
                    evt.CommenceTime.ToCostaRicaTime() :
                    evt.CommenceTime;

                var isValidDate = evt.CommenceTime > DateTime.MinValue.AddYears(10);
                if (!isValidDate)
                {
                    localTime = DateTime.Now.AddHours(1);
                }

                <div class="search-event-card glass-effect">
                    <div class="event-card-compact">
                        <!-- Header with Sport Badge and Status -->
                        <div class="event-header-compact">
                            <span class="event-sport-badge-mini">
                                <i class="bi bi-@(evt.SportKey?.Contains("soccer") == true ? "trophy" : evt.SportKey?.Contains("basketball") == true ? "circle" : evt.SportKey?.Contains("americanfootball") == true ? "shield" : "trophy")"></i>
                            </span>
                            <span class="event-status-mini">
                                @if (!isValidDate)
                                {
                                    <span class="status-badge-mini scheduled"><i class="bi bi-clock"></i></span>
                                }
                                else if (DateTimeHelper.IsEventLive(localTime))
                                {
                                    <span class="status-badge-mini live"><i class="bi bi-record-circle-fill"></i></span>
                                }
                                else if (localTime <= DateTime.Now.AddHours(2))
                                {
                                    <span class="status-badge-mini upcoming"><i class="bi bi-clock-fill"></i></span>
                                }
                                else
                                {
                                    <span class="status-badge-mini scheduled"><i class="bi bi-calendar-check"></i></span>
                                }
                            </span>
                        </div>

                        <!-- Teams -->
                        <div class="event-teams-compact">
                            <div class="team-compact home-team">
                                <div class="team-avatar-mini"><i class="bi bi-shield-fill"></i></div>
                                <span class="team-name-mini">@(evt.HomeTeam.Length > 15 ? evt.HomeTeam.Substring(0, 15) + "..." : evt.HomeTeam)</span>
                            </div>
                            <div class="vs-divider-mini">
                                <span class="vs-mini">VS</span>
                            </div>
                            <div class="team-compact away-team">
                                <div class="team-avatar-mini"><i class="bi bi-shield-fill"></i></div>
                                <span class="team-name-mini">@(evt.AwayTeam.Length > 15 ? evt.AwayTeam.Substring(0, 15) + "..." : evt.AwayTeam)</span>
                            </div>
                        </div>

                        <!-- Event Meta -->
                        <div class="event-meta-compact">
                            <small class="text-primary">
                                <i class="bi bi-calendar3 me-1"></i>
                                @if (!isValidDate)
                                {
                                    <text>Por confirmar</text>
                                }
                                else
                                {
                                    @localTime.ToString("dd/MM HH:mm")
                                }
                            </small>
                            @if (isValidDate)
                            {
                                <small class="text-muted ms-2">
                                    @DateTimeHelper.GetTimeUntilEvent(localTime)
                                </small>
                            }
                        </div>

                        <!-- Odds (Compact) -->
                        <div class="event-odds-compact">
                            @if (evt.Bookmakers != null && evt.Bookmakers.Any())
                            {
                                var bestBookmaker = evt.Bookmakers.FirstOrDefault();
                                var h2hMarket = bestBookmaker?.Markets?.FirstOrDefault(m => m.Key == "h2h");
                                if (h2hMarket != null && h2hMarket.Outcomes != null)
                                {
                                    <div class="odds-chips-mini">
                                        @foreach (var outcome in h2hMarket.Outcomes)
                                        {
                                            var oddsValue = outcome.Price.ToString("0.00", System.Globalization.CultureInfo.InvariantCulture);
                                            <div class="odds-chip-mini">
                                                <span class="chip-label-mini">@(outcome.Name.Length > 8 ? outcome.Name.Substring(0, 8) + "..." : outcome.Name)</span>
                                                <button class="chip-btn-mini"
                                                        data-event-id="@evt.Id"
                                                        data-sport-key="@evt.SportKey"
                                                        data-team-name="@outcome.Name"
                                                        data-odds="@oddsValue"
                                                        onclick="addToBetSlipFromSearch(this)"
                                                        title="Agregar @outcome.Name a apuesta con cuota @oddsValue">
                                                    <strong>@outcome.Price.ToString("0.00")</strong>
                                                </button>
                                            </div>
                                        }
                                    </div>
                                    <div class="bookmaker-info-mini">
                                        <small class="text-success">
                                            <i class="bi bi-check-circle me-1"></i>@(bestBookmaker?.Title?.Length > 15 ? bestBookmaker.Title.Substring(0, 15) + "..." : bestBookmaker?.Title)
                                        </small>
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="text-center text-muted py-2">
                                    <i class="bi bi-clock-history fs-6"></i>
                                    <small class="d-block">No disponible</small>
                                </div>
                            }
                        </div>

                        <!-- Footer Actions -->
                        <div class="event-footer-compact">
                            <a href="@Url.Action("EventDetails", "OddsApi", new { sportKey = evt.SportKey, eventId = evt.Id })" 
                               class="btn btn-sm btn-primary action-btn-mini">
                                <i class="bi bi-eye me-1"></i>Detalles
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (Model.Count >= 10)
        {
            <div class="text-center mt-3">
                <button class="btn btn-outline-primary btn-sm load-more-btn" onclick="loadMoreResults()">
                    <i class="bi bi-arrow-down-circle me-1"></i>Cargar más resultados
                </button>
            </div>
        }
    </div>
}