@using Proyecto_Apuestas.ViewModels.API
@model SportEventsViewModel
@{
    Layout = "_LayoutM";
    ViewData["Title"] = $"Eventos - {Model.Sport?.Title ?? "Deportes"}";
    var regions = ViewBag.Regions as Dictionary<string, string>;
    var markets = ViewBag.Markets as Dictionary<string, string>;
}

@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">
        @ViewBag.ErrorMessage
    </div>
}


<div class="container py-4">

    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb bg-dark text-white p-2 rounded">
            <li class="breadcrumb-item"><a class="text-decoration-none text-white" href="@Url.Action("Index", "OddsApi")">Cuotas API</a></li>
            <li class="breadcrumb-item"><a class="text-decoration-none text-white" href="@Url.Action("Sports", "OddsApi")">Deportes</a></li>
            <li class="breadcrumb-item active text-white" aria-current="page">@Model.Sport?.Title</li>
        </ol>
    </nav>

    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-white"><i class="bi bi-calendar-event me-2"></i>@Model.Sport?.Title</h2>
        <div>
            <button class="btn btn-outline-primary me-2" onclick="refreshEvents()"><i class="bi bi-arrow-clockwise"></i> Actualizar</button>
            @if (User.Identity?.IsAuthenticated == true)
            {
                <a href="@Url.Action("BetSlip", "Betting")" class="btn btn-primary"><i class="bi bi-cart3"></i> Boleto (<span id="betCount">0</span>)</a>
            }
        </div>
    </div>

    <!-- Filtros -->
    <div class="card bg-dark border-secondary mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-4">
                    <label class="form-label text-white-50">Región</label>
                    <select id="regionFilter" class="form-select bg-dark text-white border-secondary">
                        @if (regions != null)
                        {
                            @foreach (var region in regions)
                            {
                                <option value="@region.Key" selected="@(Model.Region == region.Key ? "selected" : null)">
                                    @region.Value
                                </option>
                            }
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <label class="form-label text-white-50">Tipo de Apuesta</label>
                    <select id="marketFilter" class="form-select bg-dark text-white border-secondary">
                        @if (markets != null)
                        {
                            @foreach (var market in markets)
                            {
                                <option value="@market.Key" selected="@(Model.Market == market.Key ? "selected" : null)">
                                    @market.Value
                                </option>
                            }
                        }
                    </select>
                </div>
                <div class="col-md-4">
                    <label class="form-label text-white-50">Ordenar por</label>
                    <select id="sortBy" class="form-select bg-dark text-white border-secondary">
                        <option value="time">Hora del Evento</option>
                        <option value="odds">Mejores Cuotas</option>
                        <option value="team">Equipo</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <!-- Lista de eventos -->
    @if (!Model.Events.Any())
    {
        <div class="alert alert-info">
            <i class="bi bi-info-circle me-2"></i>No hay eventos disponibles en este momento.
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var evt in Model.Events)
            {
                <div class="col">
                    <div class="card h-100 bg-dark text-white border-secondary shadow-sm">
                        <div class="card-body d-flex flex-column">
                            <div class="mb-2">
                                <small class="text-primary">@evt.CommenceTime.ToString("dd/MM/yyyy HH:mm")</small>
                                @if (evt.CommenceTime <= DateTime.Now && evt.CommenceTime >= DateTime.Now.AddHours(-3))
                                {
                                    <span class="badge bg-danger ms-2"><i class="bi bi-broadcast"></i> EN VIVO</span>
                                }
                            </div>

                            <h5 class="card-title mb-3 text-truncate">
                                <span>@evt.HomeTeam</span> vs <span>@evt.AwayTeam</span>
                            </h5>

                            <!-- Cuotas -->
                            <div class="mb-3">
                                @if (evt.Bookmakers != null && evt.Bookmakers.Any())
                                {
                                    var bestBookmaker = evt.Bookmakers.FirstOrDefault();
                                    var h2hMarket = bestBookmaker?.Markets?.FirstOrDefault(m => m.Key == "h2h");

                                    if (h2hMarket != null && h2hMarket.Outcomes != null)
                                    {
                                        <div class="d-flex gap-2 flex-wrap justify-content-center">
                                            @foreach (var outcome in h2hMarket.Outcomes)
                                            {
                                                <button class="btn btn-outline-primary btn-sm text-white"
                                                        data-event-id="@evt.Id"
                                                        data-sport-key="@Model.SportKey"
                                                        data-team-name="@outcome.Name"
                                                        data-odds="@outcome.Price"
                                                        onclick="addToBetSlip(this)">
                                                    @outcome.Name <br /> <strong>@outcome.Price.ToString("0.00")</strong>
                                                </button>
                                            }
                                        </div>
                                        <div class="text-center mt-2">
                                            <small class="text-muted">vía @bestBookmaker.Title</small>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="text-center text-muted"><i class="bi bi-clock-history"></i> Cuotas no disponibles</div>
                                }
                            </div>

                            <!-- Acciones -->
                            <div class="mt-auto d-flex justify-content-between">
                                <a href="@Url.Action("EventDetails", "OddsApi", new { sportKey = Model.SportKey, eventId = evt.Id })"
                                   class="btn btn-primary btn-sm"><i class="bi bi-eye"></i> Ver Detalles</a>
                                <button class="btn btn-outline-success btn-sm"
                                        data-event-id="@evt.Id"
                                        data-sport-key="@Model.SportKey"
                                        onclick="syncEventToLocal(this)">
                                    <i class="bi bi-cloud-download"></i> Sincronizar
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

<!-- Modal Apuesta Rápida -->
<div class="modal fade" id="quickBetModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content bg-dark text-white border-primary">
            <div class="modal-header border-bottom border-primary">
                <h5 class="modal-title">Apuesta Rápida</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div id="quickBetDetails" class="mb-3"></div>
                <label for="quickBetAmount" class="form-label">Monto a Apostar</label>
                <input type="number" id="quickBetAmount" class="form-control bg-dark text-white mb-2" min="100" step="100">
                <small class="text-muted">Mínimo: ₡100</small>
                <div class="mt-2">
                    <strong>Ganancia Potencial: <span id="potentialWin">₡0</span></strong>
                </div>
            </div>
            <div class="modal-footer border-top border-primary">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button class="btn btn-primary" onclick="confirmQuickBet()">Confirmar Apuesta</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function addToBetSlip(btn) {
            const team = btn.dataset.teamName;
            const odds = parseFloat(btn.dataset.odds);
            const eventId = btn.dataset.eventId;
            const sportKey = btn.dataset.sportKey;

            const modalEl = document.getElementById('quickBetModal');
            const modal = new bootstrap.Modal(modalEl);

            document.getElementById('quickBetDetails').innerText = `Apostar a: ${team} (${odds.toFixed(2)})`;
            document.getElementById('quickBetAmount').value = 100;
            document.getElementById('potentialWin').innerText = `₡${(100 * odds).toFixed(0)}`;

            // Guardar datos
            modalEl._eventId = eventId;
            modalEl._sportKey = sportKey;
            modalEl._team = team;
            modalEl._odds = odds;

            modal.show();
        }

        document.getElementById('quickBetAmount').addEventListener('input', function() {
            const modalEl = document.getElementById('quickBetModal');
            const amount = parseFloat(this.value) || 0;
            document.getElementById('potentialWin').innerText = `₡${(amount * modalEl._odds).toFixed(0)}`;
        });

        function confirmQuickBet() {
            const modalEl = document.getElementById('quickBetModal');
            const amount = parseFloat(document.getElementById('quickBetAmount').value);

            console.log(`Apostando ₡${amount} a ${modalEl._team} en evento ${modalEl._eventId}`);
            // Aquí llama tu controlador para registrar la apuesta

            const modal = bootstrap.Modal.getInstance(modalEl);
            modal.hide();
        }
    </script>
}

@section Styles {
    <style>
        body {
            background-color: #121212;
            color: #fff;
        }

        .card {
            border-radius: 0.5rem;
        }

        .card-title {
            font-weight: 500;
            color: #fff;
        }

        .btn-outline-primary {
            transition: transform 0.2s ease;
        }

            .btn-outline-primary:hover {
                transform: scale(1.05);
            }

        .badge {
            animation: pulse 2s infinite;
        }

        .bg-dark {
            background-color: #1e1e1e !important;
        }
    </style>
}
